/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Ball.ts":
/*!*********************!*\
  !*** ./src/Ball.ts ***!
  \*********************/
/*! namespace exports */
/*! export Ball [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ball\": () => /* binding */ Ball\n/* harmony export */ });\nvar Ball = /** @class */ (function () {\r\n    function Ball(id, y, x) {\r\n        this.colors = [\"red\", \"orange\", \"cyan\", \"white\", \"black\", \"yellow\", \"lime\"];\r\n        var el = document.createElement(\"div\");\r\n        el.className = \"ball\";\r\n        el.id = \"\" + id;\r\n        var color = Math.floor(Math.random() * 7);\r\n        el.style.background = this.colors[color];\r\n        this.div = el;\r\n        this.id = id;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.color = this.colors[color];\r\n    }\r\n    Ball.prototype.changeYX = function (y, x) {\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n    return Ball;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack://kulki/./src/Ball.ts?");

/***/ }),

/***/ "./src/Decorators.ts":
/*!***************************!*\
  !*** ./src/Decorators.ts ***!
  \***************************/
/*! namespace exports */
/*! export wall [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wall\": () => /* binding */ wall\n/* harmony export */ });\nfunction wall(target, name, descriptor) {\r\n    console.log(\"log z dekoratora\");\r\n    var method = descriptor.value;\r\n    descriptor.value = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        method.apply(this, args);\r\n        console.log(this.wall);\r\n        this.wall.style.display = \"flex\";\r\n        var comment = \"\";\r\n        if (this.points < 3000) {\r\n            comment = \"Oj słabiutko :c\";\r\n        }\r\n        else if (this.points >= 3000 && this.points < 6000) {\r\n            comment = \"Ujdzie w tłumie..\";\r\n        }\r\n        else if (this.points >= 6000 && this.points < 10000) {\r\n            comment = \"Woow!\";\r\n        }\r\n        else if (this.points >= 10000) {\r\n            comment = \"Wymiatasz!\";\r\n        }\r\n        this.wall.innerHTML = \"<h3>Game over</h3></br><h3>Punkty: \" + this.points + \"</h3></br><em>~ \" + comment + \" ~</em>\";\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack://kulki/./src/Decorators.ts?");

/***/ }),

/***/ "./src/Game.ts":
/*!*********************!*\
  !*** ./src/Game.ts ***!
  \*********************/
/*! namespace exports */
/*! export Game [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Game\": () => /* binding */ Game\n/* harmony export */ });\n/* harmony import */ var _Ball__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Ball */ \"./src/Ball.ts\");\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Decorators */ \"./src/Decorators.ts\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __spreadArrays = (undefined && undefined.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\n\r\nvar Game = /** @class */ (function () {\r\n    function Game(width, X) {\r\n        var _this = this;\r\n        this.map_A = [];\r\n        this.map_B = [];\r\n        this.map_Balls = [];\r\n        this.balls = [];\r\n        this.balls_Preview = [];\r\n        this.start = { y: null, x: null };\r\n        this.end = { y: null, x: null };\r\n        this.noClickEnd = { y: null, x: null };\r\n        this.path = [];\r\n        this.number = 1;\r\n        this.isPathFinded = false;\r\n        this.cursorOnArea = \"\";\r\n        this.counter = 0;\r\n        this.points = 0;\r\n        console.log(\"MAP\");\r\n        this.width = width;\r\n        this.numberOfBalls = X;\r\n        this.map_createMaps();\r\n        this.wall = document.createElement(\"div\");\r\n        this.wall.id = \"wall\";\r\n        this.wall.style.display = \"none\";\r\n        document.body.appendChild(this.wall);\r\n        console.log(this.wall);\r\n        document.body.onkeydown = function (event) {\r\n            console.log(_this.balls);\r\n            console.log(_this.map_Balls);\r\n        };\r\n    }\r\n    Game.prototype.map_createMaps = function () {\r\n        for (var i = 0; i < this.width; i++) {\r\n            var row_A = [];\r\n            var row_B = [];\r\n            var row_Balls = [];\r\n            for (var j = 0; j < this.width; j++) {\r\n                var area = [];\r\n                row_A.push(0);\r\n                row_Balls.push(null);\r\n                row_B.push(area);\r\n            }\r\n            this.map_A.push(row_A);\r\n            this.map_B.push(row_B);\r\n            this.map_Balls.push(row_Balls);\r\n        }\r\n        console.log(this.map_A);\r\n        console.log(this.map_B);\r\n        console.log(this.map_Balls);\r\n        this.map_setRandomBalls(this.numberOfBalls);\r\n        this.map_createDivs();\r\n    };\r\n    Game.prototype.map_createDivs = function () {\r\n        var _this = this;\r\n        var divMap = document.createElement(\"div\");\r\n        divMap.className = \"map\";\r\n        for (var i = 0; i < this.width; i++) {\r\n            var row = document.createElement(\"div\");\r\n            row.className = \"row\";\r\n            for (var j = 0; j < this.width; j++) {\r\n                var area = document.createElement(\"div\");\r\n                area.className = \"area\";\r\n                area.id = i + \"_\" + j;\r\n                area.onmouseenter = function (event) {\r\n                    var element = event.target;\r\n                    _this.cursorOnArea = element.id;\r\n                    if (_this.start.y != null && _this.end.y == null) {\r\n                        _this.map_noClicked_clear();\r\n                        var x = Number(element.id.split(\"_\")[1]);\r\n                        var y = Number(element.id.split(\"_\")[0]);\r\n                        if (element.innerText == \"\" && element.children.length == 0) {\r\n                            // element.innerText = \"M\"\r\n                            _this.map_A[y][x] = \"M\";\r\n                            _this.noClickEnd.y = y;\r\n                            _this.noClickEnd.x = x;\r\n                            _this.findPath([_this.start], [[_this.start.y + \"_\" + _this.start.x]], 1);\r\n                        }\r\n                    }\r\n                };\r\n                area.onclick = function (event) {\r\n                    if (_this.end.y == null) {\r\n                        var element = event.target;\r\n                        var parentElement = element.parentElement;\r\n                        var x = void 0;\r\n                        var y = void 0;\r\n                        if (parentElement.className == \"row\") {\r\n                            x = Number(element.id.split(\"_\")[1]);\r\n                            y = Number(element.id.split(\"_\")[0]);\r\n                        }\r\n                        else {\r\n                            x = Number(parentElement.id.split(\"_\")[1]);\r\n                            y = Number(parentElement.id.split(\"_\")[0]);\r\n                        }\r\n                        console.log(_this.start);\r\n                        console.log(y + \" \" + x);\r\n                        if (element.className == \"ball\" && _this.start.y == null) {\r\n                            console.log(\"START\");\r\n                            _this.isPathFinded = false;\r\n                            element.style.width = \"40px\";\r\n                            element.style.height = \"40px\";\r\n                            _this.selectedBall = element;\r\n                            console.log(_this.selectedBall);\r\n                            _this.beforeStart = _this.map_Balls[y][x];\r\n                            _this.map_Balls[y][x] = null;\r\n                            _this.map_A[y][x] = \"S\";\r\n                            _this.path.push(element.parentElement.id);\r\n                            _this.start.y = y;\r\n                            _this.start.x = x;\r\n                            _this.map_B[y][x].push(_this.start);\r\n                        }\r\n                        else if (element.className != \"ball\" && element.children.length == 0 && _this.start.y != null && _this.end.y == null && _this.path.length > 0) {\r\n                            console.log(\"END\");\r\n                            // element.innerText = \"M\"\r\n                            _this.noClickEnd = { y: null, x: null };\r\n                            _this.map_A[y][x] = \"M\";\r\n                            _this.end.y = y;\r\n                            _this.end.x = x;\r\n                            _this.selectedBall.style.removeProperty(\"width\");\r\n                            _this.selectedBall.style.removeProperty(\"height\");\r\n                            // this.findPath([this.start], [[`${this.start.y}_${this.start.x}`]], 1)\r\n                            for (var i_1 = 0; i_1 < _this.path.length; i_1++) {\r\n                                var area = document.getElementById(_this.path[i_1]);\r\n                                area.style.background = \"#dddddd`\";\r\n                            }\r\n                            var end = document.getElementById(_this.end.y + \"_\" + _this.end.x);\r\n                            end.appendChild(_this.selectedBall);\r\n                            for (var i_2 = 0; i_2 < _this.balls.length; i_2++) {\r\n                                if (_this.balls[i_2].id == Number(_this.selectedBall.id)) {\r\n                                    _this.map_A[y][x] = \"B\";\r\n                                    _this.map_Balls[y][x] = _this.beforeStart;\r\n                                    _this.balls[i_2].changeYX(_this.end.y, _this.end.x);\r\n                                    console.log(_this.balls[i_2]);\r\n                                    break;\r\n                                }\r\n                            }\r\n                            setTimeout(function () {\r\n                                _this.map_clear();\r\n                                console.log(\"ADD 3 BALLS\");\r\n                                console.log(_this.map_A);\r\n                                _this.check(_this.beforeStart, \"click\");\r\n                                console.log(_this.map_Balls);\r\n                                _this.map_makeArrayRight();\r\n                                _this.selectedBall = null;\r\n                                _this.beforeStart = null;\r\n                                _this.end.y = null;\r\n                                _this.end.x = null;\r\n                            }, 1000);\r\n                        }\r\n                        else if (_this.start.y == y && _this.start.x == x) {\r\n                            _this.isPathFinded = true;\r\n                            _this.selectedBall.style.removeProperty(\"width\");\r\n                            _this.selectedBall.style.removeProperty(\"height\");\r\n                            _this.map_A[y][x] = \"B\";\r\n                            _this.map_Balls[y][x] = _this.beforeStart;\r\n                            _this.beforeStart = null;\r\n                            _this.selectedBall = null;\r\n                            _this.path = [];\r\n                            _this.start.y = null;\r\n                            _this.start.x = null;\r\n                            _this.map_B[y][x] = [];\r\n                        }\r\n                    }\r\n                };\r\n                row.appendChild(area);\r\n            }\r\n            divMap.appendChild(row);\r\n        }\r\n        document.body.appendChild(divMap);\r\n        this.map_putBalls();\r\n        console.log(\"map div - completed\");\r\n    };\r\n    Game.prototype.map_makeArrayRight = function () {\r\n        for (var i = 0; i < this.width; i++) {\r\n            for (var j = 0; j < this.width; j++) {\r\n                var child = document.getElementById(i + \"_\" + j).children;\r\n                if (child.length > 0) {\r\n                    for (var k = 0; k < this.balls.length; k++) {\r\n                        if (String(this.balls[k].id) == child[0].id) {\r\n                            this.map_A[i][j] = \"B\";\r\n                            this.map_Balls[i][j] = this.balls[k];\r\n                            console.log(this.balls[k]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.map_setRandomBalls = function (nr) {\r\n        for (var i = 0; i < 3; i++) {\r\n            var ball = new _Ball__WEBPACK_IMPORTED_MODULE_0__.Ball(this.counter, 0, 0);\r\n            this.balls_Preview.push(ball);\r\n            document.getElementById(\"preview\").appendChild(ball.div);\r\n            this.counter++;\r\n        }\r\n        console.log(this.balls_Preview);\r\n        console.log(\"random Xes - completed\");\r\n    };\r\n    Game.prototype.gameOver = function () {\r\n        setTimeout(function () {\r\n            if (confirm(\"Czy chcesz zagrać jeszcze raz?\")) {\r\n                location.reload();\r\n            }\r\n        }, 500);\r\n    };\r\n    Game.prototype.map_putBalls = function () {\r\n        var c = 0;\r\n        while (c < 3) {\r\n            for (var i = 0; i < this.width; i++) {\r\n                for (var j = 0; j < this.width; j++) {\r\n                    var rand = Math.floor(Math.random() * 20);\r\n                    if (this.map_A[i][j] == 0 && rand == 5 && c < 3) {\r\n                        if (document.getElementById(i + \"_\" + j).children.length == 0)\r\n                            if (this.balls.length < (this.width * this.width)) {\r\n                                document.getElementById(\"preview\").removeChild(this.balls_Preview[c].div);\r\n                                var area = document.getElementById(i + \"_\" + j);\r\n                                area.appendChild(this.balls_Preview[c].div);\r\n                                this.balls_Preview[c].y = i;\r\n                                this.balls_Preview[c].x = j;\r\n                                this.map_A[i][j] = \"B\";\r\n                                this.map_Balls[i][j] = this.balls_Preview[c];\r\n                                this.balls.push(this.balls_Preview[c]);\r\n                                this.check(this.balls_Preview[c], \"auto\");\r\n                                // console.log(this.balls_Preview[c].div)\r\n                                c++;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                    }\r\n                }\r\n                if (this.balls.length >= (this.width * this.width)) {\r\n                    c = 4;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (this.balls.length >= (this.width * this.width)) {\r\n            this.gameOver();\r\n        }\r\n        this.balls_Preview = [];\r\n        this.map_setRandomBalls(3);\r\n    };\r\n    Game.prototype.map_noClicked_clear = function () {\r\n        for (var i = 0; i < this.path.length; i++) {\r\n            var element = document.getElementById(this.path[i]);\r\n            element.style.background = \"white\";\r\n            if (element.innerText == \"M\" && element.children.length == 0)\r\n                element.innerText = \"\";\r\n        }\r\n        this.path = [];\r\n        this.isPathFinded = false;\r\n        for (var i = 0; i < this.width; i++) {\r\n            for (var j = 0; j < this.width; j++) {\r\n                if (this.map_A[i][j] != \"B\") {\r\n                    this.map_A[i][j] = 0;\r\n                    this.map_B[i][j] = [];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.map_clear = function () {\r\n        for (var i = 0; i < this.path.length; i++) {\r\n            var element = document.getElementById(this.path[i]);\r\n            element.style.background = \"white\";\r\n            if (element.children.length == 0)\r\n                element.innerText = \"\";\r\n        }\r\n        this.start = { y: null, x: null };\r\n        this.end = { y: null, x: null };\r\n        this.path = [];\r\n        this.isPathFinded = false;\r\n        for (var i = 0; i < this.width; i++) {\r\n            for (var j = 0; j < this.width; j++) {\r\n                if (this.map_A[i][j] != \"B\") {\r\n                    this.map_A[i][j] = 0;\r\n                    this.map_B[i][j] = [];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.check = function (currentBall, state) {\r\n        console.log(\"HORIZONTALLLLLLLLY\");\r\n        //  --- Horizontally ---\r\n        var x = currentBall.x;\r\n        var ballsHorizontally = [];\r\n        while (x + 1 < this.width && this.map_Balls[currentBall.y][x + 1] != null && currentBall.color == this.map_Balls[currentBall.y][x + 1].color) {\r\n            ballsHorizontally.push(this.map_Balls[currentBall.y][x + 1]);\r\n            x++;\r\n        }\r\n        x = currentBall.x;\r\n        while (x - 1 >= 0 && this.map_Balls[currentBall.y][x - 1] != null && currentBall.color == this.map_Balls[currentBall.y][x - 1].color) {\r\n            ballsHorizontally.push(this.map_Balls[currentBall.y][x - 1]);\r\n            x--;\r\n        }\r\n        //  --- Perpendicularly ---\r\n        var ballsPerpendicularly = [];\r\n        var y = currentBall.y;\r\n        while (y + 1 < this.width && this.map_Balls[y + 1][currentBall.x] != null && currentBall.color == this.map_Balls[y + 1][currentBall.x].color) {\r\n            ballsPerpendicularly.push(this.map_Balls[y + 1][currentBall.x]);\r\n            y++;\r\n        }\r\n        y = currentBall.y;\r\n        while (y - 1 >= 0 && this.map_Balls[y - 1][currentBall.x] != null && currentBall.color == this.map_Balls[y - 1][currentBall.x].color) {\r\n            ballsPerpendicularly.push(this.map_Balls[y - 1][currentBall.x]);\r\n            y--;\r\n        }\r\n        // --- DiagonallyRight ---\r\n        var ballsDiagonallyRight = [];\r\n        x = currentBall.x;\r\n        y = currentBall.y;\r\n        while (x + 1 < this.width && y + 1 < this.width && this.map_Balls[y + 1][x + 1] != null && currentBall.color == this.map_Balls[y + 1][x + 1].color) {\r\n            ballsDiagonallyRight.push(this.map_Balls[y + 1][x + 1]);\r\n            x++;\r\n            y++;\r\n        }\r\n        x = currentBall.x;\r\n        y = currentBall.y;\r\n        while (x - 1 >= 0 && y - 1 >= 0 && this.map_Balls[y - 1][x - 1] != null && currentBall.color == this.map_Balls[y - 1][x - 1].color) {\r\n            ballsDiagonallyRight.push(this.map_Balls[y - 1][x - 1]);\r\n            x--;\r\n            y--;\r\n        }\r\n        // --- DiagonallyLeft ---\r\n        var ballsDiagonallyLeft = [];\r\n        x = currentBall.x;\r\n        y = currentBall.y;\r\n        while (x + 1 < this.width && y - 1 >= 0 && this.map_Balls[y - 1][x + 1] != null && currentBall.color == this.map_Balls[y - 1][x + 1].color) {\r\n            ballsDiagonallyLeft.push(this.map_Balls[y - 1][x + 1]);\r\n            x++;\r\n            y--;\r\n        }\r\n        x = currentBall.x;\r\n        y = currentBall.y;\r\n        while (x - 1 >= 0 && y + 1 < this.width && this.map_Balls[y + 1][x - 1] != null && currentBall.color == this.map_Balls[y + 1][x - 1].color) {\r\n            ballsDiagonallyLeft.push(this.map_Balls[y + 1][x - 1]);\r\n            x--;\r\n            y++;\r\n        }\r\n        console.log(ballsHorizontally);\r\n        console.log(ballsPerpendicularly);\r\n        console.log(ballsDiagonallyRight);\r\n        console.log(ballsDiagonallyLeft);\r\n        var fullArray = [];\r\n        if (ballsHorizontally.length >= 4)\r\n            fullArray = fullArray.concat(ballsHorizontally);\r\n        if (ballsPerpendicularly.length >= 4)\r\n            fullArray = fullArray.concat(ballsPerpendicularly);\r\n        if (ballsDiagonallyRight.length >= 4)\r\n            fullArray = fullArray.concat(ballsDiagonallyRight);\r\n        if (ballsDiagonallyLeft.length >= 4)\r\n            fullArray = fullArray.concat(ballsDiagonallyLeft);\r\n        if (fullArray.length > 0) {\r\n            fullArray.push(currentBall);\r\n            console.log(fullArray);\r\n            this.deleteBalls(fullArray);\r\n        }\r\n        else if (state == \"click\") {\r\n            this.map_putBalls();\r\n        }\r\n    };\r\n    Game.prototype.deleteBalls = function (fiveBalls) {\r\n        var counter = 0;\r\n        console.log(\"USUWAŃSKO\");\r\n        for (var i = 0; i < fiveBalls.length; i++) {\r\n            this.map_A[fiveBalls[i].y][fiveBalls[i].x] = 0;\r\n            this.map_Balls[fiveBalls[i].y][fiveBalls[i].x] = null;\r\n            document.getElementById(\"\" + fiveBalls[i].id).remove();\r\n        }\r\n        this.ballsCheck();\r\n        var bonus = 0;\r\n        for (var i = 1; i < fiveBalls.length - 4; i++) {\r\n            bonus += 100 * i;\r\n        }\r\n        this.points += 500 + bonus;\r\n        document.getElementById(\"points\").innerText = \"Points: \" + this.points;\r\n    };\r\n    Game.prototype.ballsCheck = function () {\r\n        var array = [];\r\n        for (var i = 0; i < this.width; i++) {\r\n            for (var j = 0; j < this.width; j++) {\r\n                if (document.getElementById(i + \"_\" + j).children.length > 0) {\r\n                    var id = Number(document.getElementById(i + \"_\" + j).children[0].id);\r\n                    for (var o = 0; o < this.balls.length; o++) {\r\n                        if (this.balls[o].id == id) {\r\n                            array.push(this.balls[o]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.balls = array;\r\n        console.log(this.balls);\r\n    };\r\n    Game.prototype.findPath = function (nearAreas, path, nr) {\r\n        if (this.isPathFinded == false) {\r\n            var newAreas = [];\r\n            var paths = [];\r\n            for (var i = 0; i < nearAreas.length; i++) {\r\n                var x = nearAreas[i].x;\r\n                var y = nearAreas[i].y;\r\n                // console.log(nr)\r\n                // console.log(`${nr}: ${this.map_A[y][x]} ${nearAreas.length}`)\r\n                if (this.map_A[y][x] == \"M\") {\r\n                    console.log(\"PATH FINDED!\");\r\n                    this.path = path[i];\r\n                    this.showPath();\r\n                    this.isPathFinded = true;\r\n                    break;\r\n                }\r\n                else {\r\n                    if (x + 1 <= this.width && this.map_A[y][x + 1] != \"B\" && (this.map_A[y][x + 1] == 0 || this.map_A[y][x + 1] == \"M\")) {\r\n                        if (this.map_A[y][x + 1] != \"M\")\r\n                            this.map_A[y][x + 1] = nr;\r\n                        var obj = { y: y, x: (x + 1) };\r\n                        newAreas.push(obj);\r\n                        var pathNow = __spreadArrays(path[i]);\r\n                        pathNow.push(y + \"_\" + (x + 1));\r\n                        paths.push(pathNow);\r\n                        this.map_B[y][x + 1] = pathNow;\r\n                    }\r\n                    if (y - 1 >= 0 && this.map_A[y - 1][x] != \"B\" && (this.map_A[y - 1][x] == 0 || this.map_A[y - 1][x] == \"M\")) {\r\n                        if (this.map_A[y - 1][x] != \"M\")\r\n                            this.map_A[y - 1][x] = nr;\r\n                        var obj = { y: (y - 1), x: x };\r\n                        newAreas.push(obj);\r\n                        var pathNow = __spreadArrays(path[i]);\r\n                        pathNow.push(y - 1 + \"_\" + x);\r\n                        paths.push(pathNow);\r\n                        this.map_B[y - 1][x] = pathNow;\r\n                    }\r\n                    if (y + 1 < this.width && this.map_A[y + 1][x] != \"B\" && (this.map_A[y + 1][x] == 0 || this.map_A[y + 1][x] == \"M\")) {\r\n                        if (this.map_A[y + 1][x] != \"M\")\r\n                            this.map_A[y + 1][x] = nr;\r\n                        var obj = { y: (y + 1), x: x };\r\n                        newAreas.push(obj);\r\n                        var pathNow = __spreadArrays(path[i]);\r\n                        pathNow.push(y + 1 + \"_\" + x);\r\n                        paths.push(pathNow);\r\n                        this.map_B[y + 1][x] = pathNow;\r\n                    }\r\n                    if (x - 1 >= 0 && this.map_A[y][x - 1] != \"B\" && (this.map_A[y][x - 1] == 0 || this.map_A[y][x - 1] == \"M\")) {\r\n                        if (this.map_A[y][x - 1] != \"M\")\r\n                            this.map_A[y][x - 1] = nr;\r\n                        var obj = { y: y, x: (x - 1) };\r\n                        newAreas.push(obj);\r\n                        var pathNow = __spreadArrays(path[i]);\r\n                        pathNow.push(y + \"_\" + (x - 1));\r\n                        paths.push(pathNow);\r\n                        this.map_B[y][x - 1] = pathNow;\r\n                    }\r\n                }\r\n            }\r\n            if (newAreas.length > 0)\r\n                this.findPath(newAreas, paths, nr + 1);\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.showPath = function () {\r\n        var _this = this;\r\n        for (var i = 0; i < this.path.length; i++) {\r\n            var element = document.getElementById(this.path[i]);\r\n            element.style.background = \"#bbbbbb\";\r\n        }\r\n        if (this.end.y != null) {\r\n            setTimeout(function () {\r\n                _this.map_clear();\r\n            }, 1000);\r\n        }\r\n        // console.log(this.path)\r\n    };\r\n    __decorate([\r\n        _Decorators__WEBPACK_IMPORTED_MODULE_1__.wall,\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], Game.prototype, \"gameOver\", null);\r\n    return Game;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack://kulki/./src/Game.ts?");

/***/ }),

/***/ "./src/Main.ts":
/*!*********************!*\
  !*** ./src/Main.ts ***!
  \*********************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game */ \"./src/Game.ts\");\n/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Menu */ \"./src/Menu.ts\");\n\r\n\r\nvar menu = new _Menu__WEBPACK_IMPORTED_MODULE_1__.Menu();\r\nvar kulki = new _Game__WEBPACK_IMPORTED_MODULE_0__.Game(9, 3);\r\n\n\n//# sourceURL=webpack://kulki/./src/Main.ts?");

/***/ }),

/***/ "./src/Menu.ts":
/*!*********************!*\
  !*** ./src/Menu.ts ***!
  \*********************/
/*! namespace exports */
/*! export Menu [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Menu\": () => /* binding */ Menu\n/* harmony export */ });\nvar Menu = /** @class */ (function () {\r\n    function Menu() {\r\n        this.div_Preview = document.createElement(\"div\");\r\n        this.div_Preview.id = \"preview\";\r\n        document.body.appendChild(this.div_Preview);\r\n        this.div_Points = document.createElement(\"h1\");\r\n        this.div_Points.id = \"points\";\r\n        this.div_Points.innerHTML = \"Points: 0\";\r\n        document.body.appendChild(this.div_Points);\r\n    }\r\n    return Menu;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack://kulki/./src/Menu.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/Main.ts");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;